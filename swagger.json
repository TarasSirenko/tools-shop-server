{
  "openapi": "3.0.0",
  "info": {
    "title": "Tools Shop API",
    "version": "1.0.0",
    "description": "Tool rental shop endpoints API"
  },
  "servers": [
    {
      "url": "https://tools-shop-server.vercel.app"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["User"],
        "summary": "Create a new user",
        "operationId": "createUser",
        "requestBody": {
          "description": "User data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "password": "12345678",
                "email": "romasi4991@gmail.com",
                "phone": "+380638232827"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "example": {
                  "email": "romasi4991@gmail.com",
                  "subscription": "client"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Email already in use",
            "content": {
              "application/json": {
                "example": {
                  "message": "Email already in use"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },

    "/api/users/verify/{verificationToken}": {
      "get": {
        "tags": ["User"],
        "summary": "Verify user email with confirmation token",
        "operationId": "verifyUser",
        "parameters": [
          {
            "name": "verificationToken",
            "description": "The request with the required token is carried out automatically when you click on the link that is sent to the mail after registration",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User verified successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/verify": {
      "post": {
        "tags": ["User"],
        "summary": "User reverification",
        "operationId": "verify",
        "requestBody": {
          "description": "User email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "email": "romasi4991@gmail.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Missing required field email"
          },
          "404": {
            "description": "User not found"
          },
          "403": {
            "description": "Verification has already been passed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },

    "/api/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "operationId": "login",
        "requestBody": {
          "description": "User email and paswword",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "password": "12345678",
                "email": "romasi4991@gmail.com"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRhcmFzc2lyZW5rbzcxQGdtYWlsLmNvbSIsImlkIjoiNjRkYmI5ZDM1NWJhMzUyYTE5OWJmNzMyIiwic3Vic2NyaXB0aW9uIjoiZGlyZWN0b3IiLCJpYXQiOjE2OTIyMjQ5OTh9.pnTrwJZVSKQMQUnRTUQvFyBLTmCqyyGB5DDyNheCGw4",
                  "user": {
                    "email": "romasi4991@gmail.com",
                    "phone": "+389345891245"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Wrong password"
          },
          "404": {
            "description": "User not found"
          },
          "403": {
            "description": "User not verified"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/logout": {
      "get": {
        "tags": ["User"],
        "summary": "User logout",
        "operationId": "logout",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Logout successful"
          },
          "404": {
            "description": "User not found"
          },

          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/changePasswordRequest": {
      "patch": {
        "tags": ["User"],
        "summary": "Password change request",
        "operationId": "changePasswordRequest",
        "requestBody": {
          "description": "User email ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "email": "romasi4991@gmail.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Letter with a temporary password to restore access has been successfully sent to your mail",
            "content": {
              "application/json": {
                "example": {
                  "mesage": "Letter with a temporary password to restore access has been successfully sent to your mail",
                  "user": "user"
                }
              }
            }
          },

          "400": {
            "description": "Message not sent, please try again."
          },
          "404": {
            "description": "User not found"
          },

          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/changePasword/{changePasswordToken}": {
      "get": {
        "tags": ["User"],
        "summary": "Verification via email to change password",
        "operationId": "changePasword",
        "parameters": [
          {
            "name": "verificationToken",
            "description": "The request with the necessary token is carried out automatically when you click on the link that comes to the mail after the request to change the password",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password successfully changed to temporary",
            "content": {
              "application/json": {
                "example": {
                  "mesage": "Password successfully changed to temporary",
                  "user": "user"
                }
              }
            }
          },
          "404": {
            "description": "Password recovery token is no longer active"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/userChengePassword": {
      "get": {
        "tags": ["User"],
        "summary": "User chenge assword",
        "operationId": "userChengePassword",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User email ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "email": "romasi4991@gmail.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password successfully changed",
            "content": {
              "application/json": {
                "example": {
                  "mesage": "Password successfully changed",
                  "user": "updatedUser"
                }
              }
            }
          },
          "400": {
            "description": "Wrong password"
          },
          "404": {
            "description": "Password recovery token is no longer active"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "password"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John Doe"
          },
          "seriesPassportNumber": {
            "type": "string",
            "description": "User's passport series and number",
            "example": "AB123456"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "johndoe@example.com"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "+1234567890"
          },
          "subscription": {
            "type": "string",
            "description": "User's subscription role",
            "enum": ["client", "seller", "manager", "director"],
            "default": "client"
          },
          "token": {
            "type": "string",
            "description": "User's authentication token",
            "example": "auth_token"
          },
          "verify": {
            "type": "boolean",
            "description": "User's verification status",
            "default": false
          },
          "verificationToken": {
            "type": "string",
            "description": "User's verification token",
            "example": "verification_token"
          },
          "setPasswordToken": {
            "type": "string",
            "description": "Token for setting/resetting password"
          },
          "counterGoodOrders": {
            "type": "integer",
            "description": "Number of successful orders",
            "default": 0
          },
          "counterOverdueOrders": {
            "type": "integer",
            "description": "Number of overdue orders",
            "default": 0
          },
          "counterBrokenTool": {
            "type": "integer",
            "description": "Number of broken tools",
            "default": 0
          },
          "availableStores": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of store IDs available to the user"
          },
          "orders": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of order IDs associated with the user"
          },
          "tools": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tool IDs associated with the user"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
